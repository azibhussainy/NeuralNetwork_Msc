{
  "version":"1.0",
  "data":{
    "sheets":[
      {
        "name":"RawData_Manipulation_Phase 1",
        "blocks":[
          {
            "type":"CODE",
            "text":"# importing pandas as pd\nimport pandas as pd\n  \n# Creating the dataframe \ndf = pd.read_csv(\"rawdata.csv\")\n  \n# Print the dataframe\ndf",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  {
                    "html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n<\/style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>Humidity<\/th>\n      <th>Temperature<\/th>\n      <th>Quality Index<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>69.24<\/td>\n      <td>30.70<\/td>\n      <td>36.59<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>69.48<\/td>\n      <td>30.70<\/td>\n      <td>36.66<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>69.40<\/td>\n      <td>30.65<\/td>\n      <td>36.51<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>69.43<\/td>\n      <td>30.63<\/td>\n      <td>36.47<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>69.47<\/td>\n      <td>30.67<\/td>\n      <td>36.57<\/td>\n    <\/tr>\n    <tr>\n      <th>...<\/th>\n      <td>...<\/td>\n      <td>...<\/td>\n      <td>...<\/td>\n    <\/tr>\n    <tr>\n      <th>114<\/th>\n      <td>39.25<\/td>\n      <td>15.38<\/td>\n      <td>13.99<\/td>\n    <\/tr>\n    <tr>\n      <th>115<\/th>\n      <td>39.23<\/td>\n      <td>15.33<\/td>\n      <td>13.94<\/td>\n    <\/tr>\n    <tr>\n      <th>116<\/th>\n      <td>38.98<\/td>\n      <td>15.23<\/td>\n      <td>13.82<\/td>\n    <\/tr>\n    <tr>\n      <th>117<\/th>\n      <td>39.33<\/td>\n      <td>15.13<\/td>\n      <td>13.72<\/td>\n    <\/tr>\n    <tr>\n      <th>118<\/th>\n      <td>39.85<\/td>\n      <td>14.95<\/td>\n      <td>13.54<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>\n<p>119 rows Ã— 3 columns<\/p>\n<\/div>",
                    "specialKind":"TABLE",
                    "type":"html"
                  }
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"\n# finding sum over index axis\n# By default the axis is set to 0\ndf.sum(axis = 0, skipna = True)",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  {
                    "html":"",
                    "specialKind":"TABLE",
                    "type":"html"
                  }
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"# importing pandas as pd\nimport pandas as pd\n  \n# Creating the dataframe \ndf = pd.read_csv(\"rawdata.csv\")\n  \n# sum over the column axis.\ndf.sum(axis = 1, skipna = True)",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  {
                    "html":"",
                    "specialKind":"TABLE",
                    "type":"html"
                  }
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"# Add a new column named 'FishCondition'\ndf['Fish Condition'] = [\"Good\" if x < '36.59'\n                                    else \"Bad\" for x in df['Quality Index']]\n  \n# Print the DataFrame\nprint(df)",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  
                ],
                "error":{
                  "category":"TypeError",
                  "message":"TypeError: '<' not supported between instances of 'float' and 'str'",
                  "frames":[
                    {
                      "name":"<module>",
                      "line":2
                    },
                    {
                      "name":"<listcomp>(.0)",
                      "line":2
                    }
                  ]
                }
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"print(df)",
            "outputs":[
              {
                "stdout":"     Humidity  Temperature  Quality Index Fish Condition\n0       69.24        30.70          36.59            Bad\n1       69.48        30.70          36.66            Bad\n2       69.40        30.65          36.51            Bad\n3       69.43        30.63          36.47            Bad\n4       69.47        30.67          36.57            Bad\n..        ...          ...            ...            ...\n114     39.25        15.38          13.99            Bad\n115     39.23        15.33          13.94            Bad\n116     38.98        15.23          13.82            Bad\n117     39.33        15.13          13.72            Bad\n118     39.85        14.95          13.54            Bad\n\n[119 rows x 4 columns]\n",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"import numpy as np\n    conditions = [\n        (df['Quality Index'] <= 36.66) & (df['Quality Index'] > 26.09),\n        (df['Quality Index'] <= 26.09),\n        (df['Quality Index'] <= 13.41),\n                ]\n\n# create a list of the values we want to assign for each condition\nvalues = ['Good', 'QuiteGood', 'Bad']\n\n# create a new column and use np.select to assign values to it using our lists as arguments\ndf['Fish Condition'] = np.select(conditions, values)\n\n# display updated DataFrame\ndf.head() ",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  
                ],
                "error":{
                  "category":"IndentationError",
                  "message":"IndentationError: unexpected indent",
                  "frames":[
                    {
                      "name":"<module>",
                      "line":2
                    }
                  ]
                }
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"print(df)\ndf",
            "outputs":[
              {
                "stdout":"     Humidity  Temperature  Quality Index Fish Condition\n0       69.24        30.70          36.59           Good\n1       69.48        30.70          36.66           Good\n2       69.40        30.65          36.51           Good\n3       69.43        30.63          36.47           Good\n4       69.47        30.67          36.57           Good\n..        ...          ...            ...            ...\n114     39.25        15.38          13.99           Good\n115     39.23        15.33          13.94           Good\n116     38.98        15.23          13.82           Good\n117     39.33        15.13          13.72           Good\n118     39.85        14.95          13.54           Good\n\n[119 rows x 4 columns]\n",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  {
                    "html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n<\/style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>Humidity<\/th>\n      <th>Temperature<\/th>\n      <th>Quality Index<\/th>\n      <th>Fish Condition<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>69.24<\/td>\n      <td>30.70<\/td>\n      <td>36.59<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>69.48<\/td>\n      <td>30.70<\/td>\n      <td>36.66<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>69.40<\/td>\n      <td>30.65<\/td>\n      <td>36.51<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>69.43<\/td>\n      <td>30.63<\/td>\n      <td>36.47<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>69.47<\/td>\n      <td>30.67<\/td>\n      <td>36.57<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>...<\/th>\n      <td>...<\/td>\n      <td>...<\/td>\n      <td>...<\/td>\n      <td>...<\/td>\n    <\/tr>\n    <tr>\n      <th>114<\/th>\n      <td>39.25<\/td>\n      <td>15.38<\/td>\n      <td>13.99<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>115<\/th>\n      <td>39.23<\/td>\n      <td>15.33<\/td>\n      <td>13.94<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>116<\/th>\n      <td>38.98<\/td>\n      <td>15.23<\/td>\n      <td>13.82<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>117<\/th>\n      <td>39.33<\/td>\n      <td>15.13<\/td>\n      <td>13.72<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>118<\/th>\n      <td>39.85<\/td>\n      <td>14.95<\/td>\n      <td>13.54<\/td>\n      <td>Good<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>\n<p>119 rows Ã— 4 columns<\/p>\n<\/div>",
                    "specialKind":"TABLE",
                    "type":"html"
                  }
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          }
        ]
      },
      {
        "name":"Phase 2",
        "blocks":[
          {
            "type":"CODE",
            "text":"# importing pandas as pd\nimport pandas as pd\n\n# importing numpy as np\nimport numpy as np\n\n  \n# Creating the dataframe \ndf = pd.read_csv(\"rawdata.csv\")\n  \n# Print the dataframe\ndf\n",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  {
                    "html":"",
                    "specialKind":"TABLE",
                    "type":"html"
                  }
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"# finding sum over index axis\n# By default the axis is set to 0\ndf.sum(axis = 1, skipna = True)\n",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  {
                    "html":"",
                    "specialKind":"TABLE",
                    "type":"html"
                  }
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"# Add a new column named 'FishCondition'\ndf['Fish Condition'] = [\"Good\" if x < '36.59'\n                                    else \"Bad\" for x in df['Quality Index']]\n  \n# Print the DataFrame\nprint(df)",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"import numpy as np\nconditions = [\n        (df['Quality Index'] <= 45.00) & (df['Quality Index'] > 26.09),\n        (df['Quality Index'] <= 26.09) & (df['Quality Index'] > 20.00),\n        (df['Quality Index'] <= 20.00),\n        ]\n\n# create a list of the values we want to assign for each condition\nvalues = ['Good', 'QuiteGood', 'Bad']\n\n# create a new column and use np.select to assign values to it using our lists as arguments\ndf['Fish Condition'] = np.select(conditions, values)\n\n# display updated DataFrame\ndf.head() ",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  {
                    "html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n<\/style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>Humidity<\/th>\n      <th>Temperature<\/th>\n      <th>Quality Index<\/th>\n      <th>Fish Condition<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>69.24<\/td>\n      <td>30.70<\/td>\n      <td>36.59<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>69.48<\/td>\n      <td>30.70<\/td>\n      <td>36.66<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>69.40<\/td>\n      <td>30.65<\/td>\n      <td>36.51<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>69.43<\/td>\n      <td>30.63<\/td>\n      <td>36.47<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>69.47<\/td>\n      <td>30.67<\/td>\n      <td>36.57<\/td>\n      <td>Good<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>\n<\/div>",
                    "specialKind":"TABLE",
                    "type":"html"
                  }
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"print(df)\ndf",
            "outputs":[
              {
                "stdout":"     Humidity  Temperature  Quality Index Fish Condition\n0       69.24        30.70          36.59           Good\n1       69.48        30.70          36.66           Good\n2       69.40        30.65          36.51           Good\n3       69.43        30.63          36.47           Good\n4       69.47        30.67          36.57           Good\n..        ...          ...            ...            ...\n114     39.25        15.38          13.99            Bad\n115     39.23        15.33          13.94            Bad\n116     38.98        15.23          13.82            Bad\n117     39.33        15.13          13.72            Bad\n118     39.85        14.95          13.54            Bad\n\n[119 rows x 4 columns]\n",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  {
                    "html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n<\/style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>Humidity<\/th>\n      <th>Temperature<\/th>\n      <th>Quality Index<\/th>\n      <th>Fish Condition<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>69.24<\/td>\n      <td>30.70<\/td>\n      <td>36.59<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>69.48<\/td>\n      <td>30.70<\/td>\n      <td>36.66<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>69.40<\/td>\n      <td>30.65<\/td>\n      <td>36.51<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>69.43<\/td>\n      <td>30.63<\/td>\n      <td>36.47<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>69.47<\/td>\n      <td>30.67<\/td>\n      <td>36.57<\/td>\n      <td>Good<\/td>\n    <\/tr>\n    <tr>\n      <th>...<\/th>\n      <td>...<\/td>\n      <td>...<\/td>\n      <td>...<\/td>\n      <td>...<\/td>\n    <\/tr>\n    <tr>\n      <th>114<\/th>\n      <td>39.25<\/td>\n      <td>15.38<\/td>\n      <td>13.99<\/td>\n      <td>Bad<\/td>\n    <\/tr>\n    <tr>\n      <th>115<\/th>\n      <td>39.23<\/td>\n      <td>15.33<\/td>\n      <td>13.94<\/td>\n      <td>Bad<\/td>\n    <\/tr>\n    <tr>\n      <th>116<\/th>\n      <td>38.98<\/td>\n      <td>15.23<\/td>\n      <td>13.82<\/td>\n      <td>Bad<\/td>\n    <\/tr>\n    <tr>\n      <th>117<\/th>\n      <td>39.33<\/td>\n      <td>15.13<\/td>\n      <td>13.72<\/td>\n      <td>Bad<\/td>\n    <\/tr>\n    <tr>\n      <th>118<\/th>\n      <td>39.85<\/td>\n      <td>14.95<\/td>\n      <td>13.54<\/td>\n      <td>Bad<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>\n<p>119 rows Ã— 4 columns<\/p>\n<\/div>",
                    "specialKind":"TABLE",
                    "type":"html"
                  }
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          }
        ]
      }
    ],
    "packages":[
      
    ],
    "kernelType":"JUPYTER",
    "language":"PYTHON"
  }
}